Threadly uses gradle to handle it's building, unit testing, and javadoc generation.  This should make compiling on your own system very easy.

Use this documentation to download and install gradle: http://www.gradle.org/get-started

Once gradle is installed, you can compile (and run unit tests) simply by running:
gradle build
the compiled jar is located at: build/libs/
javadocs are located at: build/docs/javadoc/
unit test results are located at: build/reports/tests/
unit test coverage results are located at: build/reports/emma/

-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

If you are using eclipse, you can import this project into eclipse easily.  First checkout the code somewhere other than your workspace.  Then from eclipse go File -> Import.  Under "General" selec "Existing Projects into Workspace".  Browse to the point where you checked out the code, select the Project and hit finish.

Once imported, if you want to contribute to the project, you should consider importing the Threadly coding style xml.  This can be done by right clicking the project and going to "Properties".  Then under "Java Code Style" select "Formatter".  Check the box to "Enable project specific settings".  Hit the import button and navigate to the threadly directory.  Import the file: threadly/config/Eclipse_Coding_Style.xml and then hit "OK".

-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

If you plan to contribute to threadly, there are some important things to keep in mind:
* Run the entire gradle build (which can be done just by running 'gradle build').  This ensures multiple things, first that the unit tests will pass, but also that the checkstyle will pass.  We don't want to accept changes which have checkstyle regressions, or unit test failures.  All tests should be passing.
* If you want to contribute a new feature or a significant amount of code, please write unit tests for it.  Part of this projects success will be the testability of the project.  If you find this to be a road block, let me know, and we can work together to get new code/features under test.
